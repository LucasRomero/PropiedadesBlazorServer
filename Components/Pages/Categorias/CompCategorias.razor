@page "/categorias"

@using Model.DTO
@using Repositorio.IRepositorio
@inject ICategoriaRepositorio CategoriaRepositorio
@inject IToastService toastServicio;
@inject SweetAlertService Swal;

<h1 class="text-center">Categorias</h1>

<div class="card">
    <div class="card-header">
        <div class="row">
            <div class="col-7">
                <h4 class="card-title text-dark">Lista de Categorias</h4>
            </div>
            <div class="col-3 offset-2">
                <NavLink href="crear-categoria" class="btn btn-primary"><i class="bi bi-plus-circle-fill"></i>Nueva Categoria</NavLink>
            </div>
        </div>
    </div>
    <div class="card-body">
        <table class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Nombre</th>
                    <th>Descripcion</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @if (categorias.Count() > 0)
                {
                    @foreach(var categoria in categorias)
                    {
                        <tr>
                            <td>@categoria.Id</td>
                            <td>@categoria.Nombre</td>
                            <td>@categoria.Descripcion</td>
                            <td>
                                <NavLink href="@($"editar-categoria/{categoria.Id}")" class="btn btn-success">
                                    <i class="bi bi-gear-fill"></i>
                                    Editar
                                </NavLink>
                                <button class="btn btn-danger" @onclick="() => ManejadorOnBorrar(categoria)">
                                    <i class="bi bi-trash-fill"></i>
                                    Borrar
                                </button>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="10">
                            <p class="text-danger">No hay categorias</p>
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
</div>




@code {
    private IEnumerable<CategoriaDTO> categorias { get; set; } = new List<CategoriaDTO>();

    protected override async Task OnInitializedAsync()
    {
        categorias = await CategoriaRepositorio.GettAllCategorias();
    }

    private async Task ManejadorOnBorrar(CategoriaDTO categoria)
    {


        SweetAlertResult result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Esta seguro?",
                Text = $"Eliminar producto: {categoria.Nombre}",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Si, eliminar",
                CancelButtonText = "No, volver",
            });

        if(result.IsConfirmed)
        {
            await CategoriaRepositorio.BorrarCategoria(categoria.Id);
            toastServicio.ShowSuccess("Producto fue eliminado");
            categorias = await CategoriaRepositorio.GettAllCategorias();
        }
    }

}
